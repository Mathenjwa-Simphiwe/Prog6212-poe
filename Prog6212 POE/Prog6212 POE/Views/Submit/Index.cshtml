@using Prog6212_POE.ViewModel
@model ClaimViewModel

@{
    ViewData["Title"] = "Submit Claim";
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<div class="alert alert-info">
    <h5>Debug Info:</h5>
    <p>Model is null: @(Model == null)</p>
    <p>TempData Success: @(TempData["Success"]?.ToString() ?? "None")</p>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
    
  

    <!-- Show validation summary -->
    <div asp-validation-summary="All" class="alert alert-danger"></div>
    <form method="post" asp-action="SubmitClaim" enctype="multipart/form-data" class="claim-form">
        <div class="form-group">
            <label asp-for="Contract"></label>
            <select asp-for="Contract" class="form-control" required>
                <option value="">Select Contract</option>
                <option value="Prog-2025">Prog-2025</option>
                <option value="Research-2024">Research-2024</option>
            </select>
            <span asp-validation-for="Contract" class="text-danger"></span>
        </div>
        
        <div class="form-group">
            <label asp-for="ClaimDate"></label>
            <input asp-for="ClaimDate" type="date" class="form-control" required>
            <span asp-validation-for="ClaimDate" class="text-danger"></span>
        </div>
        
        <div class="form-group">
            <label asp-for="Category"></label>
            <select asp-for="Category" class="form-control" required>
                <option value="">Select Category</option>
                <option value="labor">Labor</option>
                <option value="materials">Materials</option>
                <option value="equipment">Equipment</option>
                <option value="other">Other</option>
            </select>
            <span asp-validation-for="Category" class="text-danger"></span>
        </div>
        
        <div class="form-group">
            <label asp-for="HoursWorked"></label>
            <input asp-for="HoursWorked" type="number" class="form-control" step="1" min="0" required>
            <span asp-validation-for="HoursWorked" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Rate"></label>
            <input asp-for="Rate" type="number" class="form-control" step="0.01" min="0" required>
            <span asp-validation-for="Rate" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Calculated Amount</label>
            <input type="number" class="form-control" value="@(Model?.HoursWorked * Model?.Rate ?? 0)" readonly>
            <small class="form-text text-muted">This is automatically calculated</small>
        </div>

        <div class="form-group">
            <label asp-for="Receipt">Upload Supporting Document (Optional)</label>
            <div class="custom-file">
                <input asp-for="Receipt" type="file" class="custom-file-input"
                       id="receiptUpload"
                       accept=".pdf,.docx,.xlsx"
                       onchange="displayFileName(this)">
                <label class="custom-file-label" for="receiptUpload">Choose file (PDF, DOCX, XLSX - max 5MB)</label>
            </div>
            <span asp-validation-for="Receipt" class="text-danger"></span>
            <small class="form-text text-muted">Allowed formats: PDF, DOCX, XLSX. Maximum file size: 5MB</small>
            <div id="file-name-display" class="mt-2 text-success"></div>
        </div>
        
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-paper-plane"></i> Submit Claim
            </button>
            <button type="reset" class="btn btn-secondary">Clear Form</button>
            <a href="@Url.Action("Index")" class="btn btn-info">View Submitted Claims</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Auto-calculate amount when hours or rate changes - FIXED IDs
        document.getElementById('HoursWorked')?.addEventListener('input', calculateAmount);
        document.getElementById('Rate')?.addEventListener('input', calculateAmount);

        function calculateAmount() {
            const hours = parseFloat(document.getElementById('HoursWorked')?.value) || 0;
            const rate = parseFloat(document.getElementById('Rate')?.value) || 0;
            const amount = hours * rate;
            document.querySelector('input[readonly]').value = amount.toFixed(2);
        }

        // File upload functionality
        function displayFileName(input) {
            const fileNameDisplay = document.getElementById('file-name-display');
            const fileLabel = document.querySelector('.custom-file-label');

            if (input.files.length > 0) {
                const file = input.files[0];

                // Check file size (5MB limit)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must be less than 5MB');
                    input.value = '';
                    fileNameDisplay.innerHTML = '';
                    fileLabel.textContent = 'Choose file (PDF, DOCX, XLSX - max 5MB)';
                    return;
                }

                // Check file type
                const allowedTypes = ['.pdf', '.docx', '.xlsx'];
                const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                if (!allowedTypes.includes(fileExtension)) {
                    alert('Please select a PDF, DOCX, or XLSX file');
                    input.value = '';
                    fileNameDisplay.innerHTML = '';
                    fileLabel.textContent = 'Choose file (PDF, DOCX, XLSX - max 5MB)';
                    return;
                }

                // Display file name
                fileLabel.textContent = file.name;
                fileNameDisplay.innerHTML = `<i class="fas fa-check-circle"></i> Selected: ${file.name}`;
            } else {
                fileNameDisplay.innerHTML = '';
                fileLabel.textContent = 'Choose file (PDF, DOCX, XLSX - max 5MB)';
            }
        }

        // Add event listener for form reset to clear file display
        document.querySelector('button[type="reset"]')?.addEventListener('click', function() {
            document.getElementById('file-name-display').innerHTML = '';
            document.querySelector('.custom-file-label').textContent = 'Choose file (PDF, DOCX, XLSX - max 5MB)';
        });

        // Calculate on page load
        document.addEventListener('DOMContentLoaded', function() {
            calculateAmount();
        });
    </script>
}
        }
